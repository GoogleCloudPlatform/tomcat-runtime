<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017 Google Inc. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>tomcat-parent</artifactId>
    <groupId>com.google.cloud.runtimes</groupId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <name>Google Tomcat Runtime Docker Image</name>
  <artifactId>tomcat</artifactId>
  <packaging>pom</packaging>

  <properties>
    <tomcat.home>/usr/local/tomcat</tomcat.home>
    <tomcat.base>/var/lib/tomcat</tomcat.base>
  </properties>

  <profiles>
    <profile>
      <id>local-docker-build</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>build</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                 <images>
                   <image>
                     <name>${docker.image.name}</name>
                     <build>
                       <dockerFileDir>${project.build.directory}/docker-src</dockerFileDir>
                       <tags>
                         <tag>${docker.tag.short}</tag>
                         <tag>${docker.tag.long}</tag>
                       </tags>
                     </build>
                   </image>
                 </images>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <id>structure-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>../../scripts/utils/structure_test.sh</executable>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <arguments>
                    <argument>--image</argument>
                    <argument>${docker.image.name}:${docker.tag.long}</argument>
                    <argument>--workspace</argument>
                    <argument>${project.basedir}/..</argument>
                    <argument>--config</argument>
                    <argument>${project.build.testOutputDirectory}/structure.yaml</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>tomcat-home</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>tomcat</artifactId>
                  <version>${tomcat.version}</version>
                  <type>tar.gz</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/docker-src</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/docker</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-tomcat-home</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/docker-src/tomcat-home</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/apache-tomcat-${tomcat.version}</directory>
                  <filtering>false</filtering>
                  <includes>
                    <include>**</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-tomcat-base</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/docker-src/tomcat-base</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/tomcat-base</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-tomcat-optional-configuration</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/docker-src/config</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/resources/config</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-structure-test</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/test/resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-cloudbuild-configuration</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/cloudbuild</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/cloudbuild</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>


    </plugins>
  </build>

</project>